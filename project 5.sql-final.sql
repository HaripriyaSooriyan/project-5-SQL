CREATE DATABASE Retailstore_1;
-- Creating table
create table customers(customer_id int(11) not null,
customer_name varchar(50) not null,
customer_phone varchar(20),
customer_email varchar(100),
primary key(customer_id)
) ;
-- Inseritng values into customers table
INSERT INTO customers VALUES(1,'John Doe',9876543241,'john.doe@example.com');
INSERT INTO customers VALUES(2,'Jane Smith',8990123456,'jane.smith@example.com');
INSERT INTO customers VALUES(3,'Bob Johnson',8698765432,'bob.johnson@example.com');
INSERT INTO customers VALUES(4,'Alice Williams',8998765432,'alice.williams@example.com');
INSERT INTO customers VALUES(5,'Mike Brown',9165432876,'mike.brown@example.com');
INSERT INTO customers VALUES(6,'Sara Lee',8690123456,'sara.lee@example.com');
INSERT INTO customers VALUES(7,'Tom Smith',8998765432,'tom.smith@example.com');
INSERT INTO customers VALUES(8,'Emily Jones',9890654321,'emily.jones@example.com');
INSERT INTO customers VALUES(9,'Dave Wilson',8999876543,'dave.wilson@example.com');
INSERT INTO customers VALUES(10,'Lisa Davis',9690765432,'lisa.davis@example.com');
select * from `customers`;
-- Order table
create table orders(order_id int(11) not null,
customer_id int(11) not null,
order_date date NOT NULL,
primary key(order_id),
Foreign key(customer_id) REFERENCES customers(customer_id)
) ;
-- Inseritng values into orders table
INSERT INTO orders VALUES(1,1,'2022-01-01');
INSERT INTO orders VALUES(2,2,'2022-01-02');
INSERT INTO orders VALUES(3,3,'2022-01-03');
INSERT INTO orders VALUES(4,4,'2022-01-04');
INSERT INTO orders VALUES(5,5,'2022-01-05');
INSERT INTO orders VALUES(6,6,'2022-01-06');
INSERT INTO orders VALUES(7,7,'2022-01-07');
INSERT INTO orders VALUES(8,8,'2022-01-08');
INSERT INTO orders VALUES(9,9,'2022-01-09');
INSERT INTO orders VALUES(10,10,'2022-01-10');
select * from `orders`;
-- Product table (•	Products (product_id, product_name, category_id, price) 
create table products(product_id int(11) NOT NULL,
product_name varchar(50),
category_id int(11) NOT NULL,
category_name varchar(50),
price int(50) NOT NULL,
primary key(product_id)
);
-- Inseritng values into orders table
INSERT INTO products VALUES(1,'T-Shirt',1,'Apparel',999);
INSERT INTO products VALUES(2,'Jeans',1,'Apparel',2499);
INSERT INTO products VALUES(3,'Sneakers',2,'Footwear',1999);
INSERT INTO products VALUES(4,'Running Shoes',2,'Footwear',2999);
INSERT INTO products VALUES(5,'Backpack',6,'Bags',1299);
INSERT INTO products VALUES(6,'Laptop',3,'Electronics',59999);
INSERT INTO products VALUES(7,'Smartphone',3,'Electronics',34999);
INSERT INTO products VALUES(8,'Headphones',4,'Accessories',2499);
INSERT INTO products VALUES(9,'Bluetooth Speaker',4,'Accessories',3999);
INSERT INTO products VALUES(10,'Smart Watch',5,'Wearables',12999);
select * from `products`;
-- Order items table
create table orderitems(order_id int(11) NOT NULL,
product_id int(11) NOT NULL,
quantity int(11) NOT NULL,
price int(50) NOT NULL,
Foreign key(order_id) REFERENCES orders(order_id),
Foreign key(product_id) REFERENCES products(product_id)
);
INSERT INTO orderitems VALUES(1,1,2,1998);
INSERT INTO orderitems VALUES(1,3,1,1999);
INSERT INTO orderitems VALUES(2,2,1,2499);
INSERT INTO orderitems VALUES(3,4,1,2999);
INSERT INTO orderitems VALUES(4,5,2,2598);
INSERT INTO orderitems VALUES(5,6,1,59999);
INSERT INTO orderitems VALUES(6,7,1,34999);
INSERT INTO orderitems VALUES(7,8,1,2499);
INSERT INTO orderitems VALUES(8,9,2,7998);
INSERT INTO orderitems VALUES(9,10,1,12999);
select * from `orderitems`;

-- • Total revenue generated by each product category in the year

select p.product_name,p.category_name,quantity,oi.price, oi.quantity*oi.price as revenue from orderitems oi 
right join products p on oi.product_id=p.product_id
order by p.product_name;

-- • Show the top 5 customers who have spent the most money at the store, along with their email address
--  and phone number.

select customer_name,customer_email,customer_phone,oi.quantity*oi.price as spent from customers c 
left join orders o on o.customer_id=c.customer_id
join orderitems oi on o.order_id=oi.order_id
order by spent desc;

-- • Show the top 3 products in terms of revenue, along with the total number of units sold 
--   and the total revenue for each product.

select p.product_name,oi.quantity as units_sold, oi.price, oi.quantity*oi.price as revenue from orderitems oi 
right join products p on oi.product_id=p.product_id
order by revenue desc;
